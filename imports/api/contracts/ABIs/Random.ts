export const RandomABI = [
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromCurrentSet",
        inputs: [{ type: "uint256", name: "index" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "checkProofOfPossession",
        inputs: [
            { type: "address", name: "sender" },
            { type: "bytes", name: "blsKey" },
            { type: "bytes", name: "blsPop" },
        ],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumberOfBlock",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getVerifiedSealBitmapFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromSet",
        inputs: [
            { type: "uint256", name: "index" },
            { type: "uint256", name: "blockNumber" },
        ],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "random",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "hashHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSizeInCurrentSet",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "revealAndCommit",
        inputs: [
            { type: "bytes32", name: "randomness" },
            { type: "bytes32", name: "newCommitment" },
            { type: "address", name: "proposer" },
        ],
        constant: false,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInCurrentSet",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBlockNumberFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRandomnessBlockRetentionWindow",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumber",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInSet",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "pure",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "computeCommitment",
        inputs: [{ type: "bytes32", name: "randomness" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochSize",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "randomnessBlockRetentionWindow",
        inputs: [],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSize",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "commitments",
        inputs: [{ type: "address", name: "" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
            { type: "uint256", name: "" },
            { type: "uint256", name: "" },
        ],
        name: "fractionMulExp",
        inputs: [
            { type: "uint256", name: "aNumerator" },
            { type: "uint256", name: "aDenominator" },
            { type: "uint256", name: "bNumerator" },
            { type: "uint256", name: "bDenominator" },
            { type: "uint256", name: "exponent" },
            { type: "uint256", name: "_decimals" },
        ],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getParentSealBitmap",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getBlockRandomness",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
    },
    {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "uint256", name: "_randomnessBlockRetentionWindow" }],
        constant: false,
    },
    {
        type: "event",
        name: "RandomnessBlockRetentionWindowSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
    },
    {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
            { type: "address", name: "previousOwner", indexed: true },
            { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
    },
];