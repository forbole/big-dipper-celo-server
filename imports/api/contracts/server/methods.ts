import { Meteor } from "meteor/meteor";
import { newKit, CeloContract } from "@celo/contractkit";

import { Contracts } from "../../contracts/contracts";

const abiDecoder = require("abi-decoder");

let kit = newKit(Meteor.settings.public.fornoAddress);
let web3 = kit.web3;

Meteor.methods({
  "contract.getContractAddress": async function () {
    let contracts = {};

    contracts["Accounts"] = await kit.registry.addressFor(
      CeloContract.Accounts
    );
    contracts["Attestations"] = await kit.registry.addressFor(
      CeloContract.Attestations
    );
    contracts["LockedGold"] = await kit.registry.addressFor(
      CeloContract.LockedGold
    );
    contracts["Escrow"] = await kit.registry.addressFor(CeloContract.Escrow);
    contracts["Exchange"] = await kit.registry.addressFor(
      CeloContract.Exchange
    );
    contracts["FeeCurrencyWhitelist"] = await kit.registry.addressFor(
      CeloContract.FeeCurrencyWhitelist
    );
    contracts["GasPriceMinimum"] = await kit.registry.addressFor(
      CeloContract.GasPriceMinimum
    );
    contracts["GoldToken"] = await kit.registry.addressFor(
      CeloContract.GoldToken
    );
    contracts["Random"] = await kit.registry.addressFor(CeloContract.Random);
    contracts["Registry"] = await kit.registry.addressFor(
      CeloContract.Registry
    );
    contracts["Reserve"] = await kit.registry.addressFor(CeloContract.Reserve);
    contracts["SortedOracles"] = await kit.registry.addressFor(
      CeloContract.SortedOracles
    );
    contracts["StableToken"] = await kit.registry.addressFor(
      CeloContract.StableToken
    );
    contracts["Validators"] = await kit.registry.addressFor(
      CeloContract.Validators
    );

    Object.keys(contracts).forEach(function (item) {
      try {
        Contracts.upsert(
          { address: contracts[item] },
          {
            $set: {
              name: item,
              address: contracts[item],
            },
          }
        );
      } catch (e) {
        console.log(e);
      }
    });

    console.log(contracts);
    return contracts;
  },
});

Meteor.methods({
  "contract.getContractABI": async function () {
    let contractABI = {};
    contractABI["Accounts"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "hasAuthorizedValidatorSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "authorizeValidatorSignerWithPublicKey",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
          { type: "bytes", name: "ecdsaPublicKey" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAccountDataEncryptionKey",
        inputs: [{ type: "bytes", name: "dataEncryptionKey" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeVoteSigner",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "authorizeValidatorSignerWithKeys",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
          { type: "bytes", name: "ecdsaPublicKey" },
          { type: "bytes", name: "blsPublicKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getWalletAddress",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isAccount",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getVoteSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "authorizeVoteSigner",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isAuthorizedSigner",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getValidatorSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "getName",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "hasAuthorizedVoteSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getAttestationSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerToAccount",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "voteSignerToAccount",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setMetadataURL",
        inputs: [{ type: "string", name: "metadataURL" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeAttestationSigner",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "authorizeAttestationSigner",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "attestationSignerToAccount",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256[]", name: "" },
          { type: "bytes", name: "" },
        ],
        name: "batchGetMetadataURL",
        inputs: [{ type: "address[]", name: "accountsToQuery" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAccount",
        inputs: [
          { type: "string", name: "name" },
          { type: "bytes", name: "dataEncryptionKey" },
          { type: "address", name: "walletAddress" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "signerToAccount",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setWalletAddress",
        inputs: [
          { type: "address", name: "walletAddress" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "createAccount",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeValidatorSigner",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "getMetadataURL",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes", name: "" }],
        name: "getDataEncryptionKey",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "authorizedBy",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "authorizeValidatorSigner",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "hasAuthorizedAttestationSigner",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setName",
        inputs: [{ type: "string", name: "name" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "AttestationSignerAuthorized",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "signer", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "VoteSignerAuthorized",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "signer", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorSignerAuthorized",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "signer", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AttestationSignerRemoved",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "oldSigner", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "VoteSignerRemoved",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "oldSigner", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorSignerRemoved",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "oldSigner", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountDataEncryptionKeySet",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "bytes", name: "dataEncryptionKey", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountNameSet",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "string", name: "name", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountMetadataURLSet",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "string", name: "metadataURL", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountWalletAddressSet",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "walletAddress", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountCreated",
        inputs: [{ type: "address", name: "account", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["Attestations"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "lookupAccountsForIdentifier",
        inputs: [{ type: "bytes32", name: "identifier" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromCurrentSet",
        inputs: [{ type: "uint256", name: "index" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "checkProofOfPossession",
        inputs: [
          { type: "address", name: "sender" },
          { type: "bytes", name: "blsKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumberOfBlock",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getVerifiedSealBitmapFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint32[]", name: "" },
          { type: "address[]", name: "" },
          { type: "uint256[]", name: "" },
          { type: "bytes", name: "" },
        ],
        name: "getCompletableAttestations",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "withdraw",
        inputs: [{ type: "address", name: "token" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint32", name: "" },
          { type: "uint32", name: "" },
        ],
        name: "getAttestationStats",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validateAttestationCode",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromSet",
        inputs: [
          { type: "uint256", name: "index" },
          { type: "uint256", name: "blockNumber" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getAttestationIssuers",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getAttestationRequestFee",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "hashHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSizeInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getMaxAttestations",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "maxAttestations",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "selectIssuersWaitBlocks",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBlockNumberFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256[]", name: "" },
          { type: "address[]", name: "" },
          { type: "uint64[]", name: "" },
          { type: "uint64[]", name: "" },
        ],
        name: "batchGetAttestationStats",
        inputs: [{ type: "bytes32[]", name: "identifiersToLookup" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumber",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInSet",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAttestationExpiryBlocks",
        inputs: [{ type: "uint256", name: "_attestationExpiryBlocks" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "attestationExpiryBlocks",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint8", name: "" },
          { type: "uint32", name: "" },
          { type: "address", name: "" },
        ],
        name: "getAttestationState",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
          { type: "address", name: "issuer" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "revoke",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "uint256", name: "index" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "attestationRequestFees",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setMaxAttestations",
        inputs: [{ type: "uint256", name: "_maxAttestations" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "request",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "uint256", name: "attestationsRequested" },
          { type: "address", name: "attestationRequestFeeToken" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setSelectIssuersWaitBlocks",
        inputs: [{ type: "uint256", name: "_selectIssuersWaitBlocks" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "selectIssuers",
        inputs: [{ type: "bytes32", name: "identifier" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint32", name: "" },
          { type: "uint32", name: "" },
          { type: "address", name: "" },
        ],
        name: "getUnselectedRequest",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "account" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSize",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "pendingWithdrawals",
        inputs: [
          { type: "address", name: "" },
          { type: "address", name: "" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "fractionMulExp",
        inputs: [
          { type: "uint256", name: "aNumerator" },
          { type: "uint256", name: "aDenominator" },
          { type: "uint256", name: "bNumerator" },
          { type: "uint256", name: "bDenominator" },
          { type: "uint256", name: "exponent" },
          { type: "uint256", name: "_decimals" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAttestationRequestFee",
        inputs: [
          { type: "address", name: "token" },
          { type: "uint256", name: "fee" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getParentSealBitmap",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "complete",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "registryAddress" },
          { type: "uint256", name: "_attestationExpiryBlocks" },
          { type: "uint256", name: "_selectIssuersWaitBlocks" },
          { type: "uint256", name: "_maxAttestations" },
          { type: "address[]", name: "attestationRequestFeeTokens" },
          { type: "uint256[]", name: "attestationRequestFeeValues" },
        ],
        constant: false,
      },
      {
        type: "event",
        name: "AttestationsRequested",
        inputs: [
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "account", indexed: true },
          { type: "uint256", name: "attestationsRequested", indexed: false },
          {
            type: "address",
            name: "attestationRequestFeeToken",
            indexed: false,
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AttestationIssuerSelected",
        inputs: [
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "issuer", indexed: true },
          {
            type: "address",
            name: "attestationRequestFeeToken",
            indexed: false,
          },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AttestationCompleted",
        inputs: [
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "issuer", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Withdrawal",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "amount", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AttestationExpiryBlocksSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "AttestationRequestFeeSet",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "SelectIssuersWaitBlocksSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "MaxAttestationsSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["LockedGold"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32[]", name: "" }],
        name: "getSlashingWhitelist",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "decrementNonvotingAccountBalance",
        inputs: [
          { type: "address", name: "account" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeSlasher",
        inputs: [
          { type: "string", name: "slasherIdentifier" },
          { type: "uint256", name: "index" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "unlockingPeriod",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "withdraw",
        inputs: [{ type: "uint256", name: "index" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getTotalLockedGold",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getAccountTotalLockedGold",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "slash",
        inputs: [
          { type: "address", name: "account" },
          { type: "uint256", name: "penalty" },
          { type: "address", name: "reporter" },
          { type: "uint256", name: "reward" },
          { type: "address[]", name: "lessers" },
          { type: "address[]", name: "greaters" },
          { type: "uint256[]", name: "indices" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getAccountNonvotingLockedGold",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isSlasher",
        inputs: [{ type: "address", name: "slasher" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "unlock",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "addSlasher",
        inputs: [{ type: "string", name: "slasherIdentifier" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setUnlockingPeriod",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "slashingWhitelist",
        inputs: [{ type: "uint256", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "incrementNonvotingAccountBalance",
        inputs: [
          { type: "address", name: "account" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getNonvotingLockedGold",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "relock",
        inputs: [
          { type: "uint256", name: "index" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getTotalPendingWithdrawals",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "totalNonvoting",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "registryAddress" },
          { type: "uint256", name: "_unlockingPeriod" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256[]", name: "" },
          { type: "uint256[]", name: "" },
        ],
        name: "getPendingWithdrawals",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "payable",
        payable: true,
        outputs: [],
        name: "lock",
        inputs: [],
        constant: false,
      },
      {
        type: "event",
        name: "UnlockingPeriodSet",
        inputs: [{ type: "uint256", name: "period", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "GoldLocked",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "GoldUnlocked",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "uint256", name: "value", indexed: false },
          { type: "uint256", name: "available", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "GoldWithdrawn",
        inputs: [
          { type: "address", name: "account", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "SlasherWhitelistAdded",
        inputs: [{ type: "string", name: "slasherIdentifier", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "SlasherWhitelistRemoved",
        inputs: [{ type: "string", name: "slasherIdentifier", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "AccountSlashed",
        inputs: [
          { type: "address", name: "slashed", indexed: true },
          { type: "uint256", name: "penalty", indexed: false },
          { type: "address", name: "reporter", indexed: true },
          { type: "uint256", name: "reward", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["Escrow"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getSentPaymentIds",
        inputs: [{ type: "address", name: "sender" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "withdraw",
        inputs: [
          { type: "address", name: "paymentId" },
          { type: "uint8", name: "v" },
          { type: "bytes32", name: "r" },
          { type: "bytes32", name: "s" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getReceivedPaymentIds",
        inputs: [{ type: "bytes32", name: "identifier" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "bytes32", name: "recipientIdentifier" },
          { type: "address", name: "sender" },
          { type: "address", name: "token" },
          { type: "uint256", name: "value" },
          { type: "uint256", name: "sentIndex" },
          { type: "uint256", name: "receivedIndex" },
          { type: "uint256", name: "timestamp" },
          { type: "uint256", name: "expirySeconds" },
          { type: "uint256", name: "minAttestations" },
        ],
        name: "escrowedPayments",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transfer",
        inputs: [
          { type: "bytes32", name: "identifier" },
          { type: "address", name: "token" },
          { type: "uint256", name: "value" },
          { type: "uint256", name: "expirySeconds" },
          { type: "address", name: "paymentId" },
          { type: "uint256", name: "minAttestations" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "revoke",
        inputs: [{ type: "address", name: "paymentId" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "receivedPaymentIds",
        inputs: [
          { type: "bytes32", name: "" },
          { type: "uint256", name: "" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "sentPaymentIds",
        inputs: [
          { type: "address", name: "" },
          { type: "uint256", name: "" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          { type: "address", name: "from", indexed: true },
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "value", indexed: false },
          { type: "address", name: "paymentId", indexed: false },
          { type: "uint256", name: "minAttestations", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Withdrawal",
        inputs: [
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "to", indexed: true },
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "value", indexed: false },
          { type: "address", name: "paymentId", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Revocation",
        inputs: [
          { type: "bytes32", name: "identifier", indexed: true },
          { type: "address", name: "by", indexed: true },
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "value", indexed: false },
          { type: "address", name: "paymentId", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["Exchange"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minimumReports",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "stable",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "stableBucket",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "exchange",
        inputs: [
          { type: "uint256", name: "sellAmount" },
          { type: "uint256", name: "minBuyAmount" },
          { type: "bool", name: "sellGold" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setUpdateFrequency",
        inputs: [{ type: "uint256", name: "newUpdateFrequency" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getSellTokenAmount",
        inputs: [
          { type: "uint256", name: "buyAmount" },
          { type: "bool", name: "sellGold" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "value" }],
        name: "spread",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "goldBucket",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "updateFrequency",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setReserveFraction",
        inputs: [{ type: "uint256", name: "newReserveFraction" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getBuyAndSellBuckets",
        inputs: [{ type: "bool", name: "sellGold" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "registryAddress" },
          { type: "address", name: "stableToken" },
          { type: "uint256", name: "_spread" },
          { type: "uint256", name: "_reserveFraction" },
          { type: "uint256", name: "_updateFrequency" },
          { type: "uint256", name: "_minimumReports" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBuyTokenAmount",
        inputs: [
          { type: "uint256", name: "sellAmount" },
          { type: "bool", name: "sellGold" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setSpread",
        inputs: [{ type: "uint256", name: "newSpread" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setMinimumReports",
        inputs: [{ type: "uint256", name: "newMininumReports" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setStableToken",
        inputs: [{ type: "address", name: "newStableToken" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "value" }],
        name: "reserveFraction",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "lastBucketUpdate",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "Exchanged",
        inputs: [
          { type: "address", name: "exchanger", indexed: true },
          { type: "uint256", name: "sellAmount", indexed: false },
          { type: "uint256", name: "buyAmount", indexed: false },
          { type: "bool", name: "soldGold", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "UpdateFrequencySet",
        inputs: [{ type: "uint256", name: "updateFrequency", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "MinimumReportsSet",
        inputs: [{ type: "uint256", name: "minimumReports", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "StableTokenSet",
        inputs: [{ type: "address", name: "stable", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "SpreadSet",
        inputs: [{ type: "uint256", name: "spread", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ReserveFractionSet",
        inputs: [{ type: "uint256", name: "reserveFraction", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["FeeCurrencyWhitelist"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "whitelist",
        inputs: [{ type: "uint256", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getWhitelist",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "addToken",
        inputs: [{ type: "address", name: "tokenAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["GasPriceMinimum"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAdjustmentSpeed",
        inputs: [{ type: "uint256", name: "_adjustmentSpeed" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "gasPriceMinimum",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "value" }],
        name: "targetDensity",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "_registryAddress" },
          { type: "uint256", name: "_gasPriceMinimumFloor" },
          { type: "uint256", name: "_targetDensity" },
          { type: "uint256", name: "_adjustmentSpeed" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setTargetDensity",
        inputs: [{ type: "uint256", name: "_targetDensity" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getGasPriceMinimum",
        inputs: [{ type: "address", name: "tokenAddress" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "value" }],
        name: "adjustmentSpeed",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setGasPriceMinimumFloor",
        inputs: [{ type: "uint256", name: "_gasPriceMinimumFloor" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "updateGasPriceMinimum",
        inputs: [
          { type: "uint256", name: "blockGasTotal" },
          { type: "uint256", name: "blockGasLimit" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "gasPriceMinimumFloor",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getUpdatedGasPriceMinimum",
        inputs: [
          { type: "uint256", name: "blockGasTotal" },
          { type: "uint256", name: "blockGasLimit" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "TargetDensitySet",
        inputs: [{ type: "uint256", name: "targetDensity", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "GasPriceMinimumFloorSet",
        inputs: [
          { type: "uint256", name: "gasPriceMinimumFloor", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AdjustmentSpeedSet",
        inputs: [{ type: "uint256", name: "adjustmentSpeed", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "GasPriceMinimumUpdated",
        inputs: [{ type: "uint256", name: "gasPriceMinimum", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["GoldToken"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "name",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "approve",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "totalSupply",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferFrom",
        inputs: [
          { type: "address", name: "from" },
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint8", name: "" }],
        name: "decimals",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "increaseAllowance",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "mint",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "balanceOf",
        inputs: [{ type: "address", name: "owner" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "symbol",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "decreaseAllowance",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transfer",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "increaseSupply",
        inputs: [{ type: "uint256", name: "amount" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "allowance",
        inputs: [
          { type: "address", name: "owner" },
          { type: "address", name: "spender" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferWithComment",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
          { type: "string", name: "comment" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          { type: "address", name: "from", indexed: true },
          { type: "address", name: "to", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "TransferComment",
        inputs: [{ type: "string", name: "comment", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "Approval",
        inputs: [
          { type: "address", name: "owner", indexed: true },
          { type: "address", name: "spender", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["Random"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromCurrentSet",
        inputs: [{ type: "uint256", name: "index" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "checkProofOfPossession",
        inputs: [
          { type: "address", name: "sender" },
          { type: "bytes", name: "blsKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumberOfBlock",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getVerifiedSealBitmapFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromSet",
        inputs: [
          { type: "uint256", name: "index" },
          { type: "uint256", name: "blockNumber" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "random",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "hashHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSizeInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "revealAndCommit",
        inputs: [
          { type: "bytes32", name: "randomness" },
          { type: "bytes32", name: "newCommitment" },
          { type: "address", name: "proposer" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBlockNumberFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRandomnessBlockRetentionWindow",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumber",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInSet",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "pure",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "computeCommitment",
        inputs: [{ type: "bytes32", name: "randomness" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "randomnessBlockRetentionWindow",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSize",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "commitments",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "fractionMulExp",
        inputs: [
          { type: "uint256", name: "aNumerator" },
          { type: "uint256", name: "aDenominator" },
          { type: "uint256", name: "bNumerator" },
          { type: "uint256", name: "bDenominator" },
          { type: "uint256", name: "exponent" },
          { type: "uint256", name: "_decimals" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getParentSealBitmap",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getBlockRandomness",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "uint256", name: "_randomnessBlockRetentionWindow" }],
        constant: false,
      },
      {
        type: "event",
        name: "RandomnessBlockRetentionWindowSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    // const RegistryABI =

    contractABI["Reserve"] = [
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setDailySpendingRatio",
        inputs: [{ type: "uint256", name: "ratio" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferExchangeGold",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "frozenReserveGoldStartBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "assetAllocationSymbols",
        inputs: [{ type: "uint256", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "removeToken",
        inputs: [
          { type: "address", name: "token" },
          { type: "uint256", name: "index" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getOrComputeTobinTax",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isToken",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferGold",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "addOtherReserveAddress",
        inputs: [{ type: "address", name: "reserveAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint128", name: "numerator" },
          { type: "uint128", name: "timestamp" },
        ],
        name: "tobinTaxCache",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getFrozenReserveGoldBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "spendingLimit",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "otherReserveAddresses",
        inputs: [{ type: "uint256", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getReserveRatio",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "removeOtherReserveAddress",
        inputs: [
          { type: "address", name: "reserveAddress" },
          { type: "uint256", name: "index" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "TOBIN_TAX_NUMERATOR",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "frozenReserveGoldDays",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getOtherReserveAddressesGoldBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getDailySpendingRatio",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOtherReserveAddress",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "frozenReserveGoldStartDay",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32[]", name: "" }],
        name: "getAssetAllocationSymbols",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getUnfrozenReserveGoldBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeSpender",
        inputs: [{ type: "address", name: "spender" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getReserveGoldBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isSpender",
        inputs: [{ type: "address", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getOtherReserveAddresses",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setTobinTaxStalenessThreshold",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getTokens",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "registryAddress" },
          { type: "uint256", name: "_tobinTaxStalenessThreshold" },
          { type: "uint256", name: "_spendingRatio" },
          { type: "uint256", name: "_frozenGold" },
          { type: "uint256", name: "_frozenDays" },
          { type: "bytes32[]", name: "_assetAllocationSymbols" },
          { type: "uint256[]", name: "_assetAllocationWeights" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setAssetAllocations",
        inputs: [
          { type: "bytes32[]", name: "symbols" },
          { type: "uint256[]", name: "weights" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "addToken",
        inputs: [{ type: "address", name: "token" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getUnfrozenBalance",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "tobinTaxStalenessThreshold",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256[]", name: "" }],
        name: "getAssetAllocationWeights",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "addSpender",
        inputs: [{ type: "address", name: "spender" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setFrozenGold",
        inputs: [
          { type: "uint256", name: "frozenGold" },
          { type: "uint256", name: "frozenDays" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "assetAllocationWeights",
        inputs: [{ type: "bytes32", name: "" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "lastSpendingDay",
        inputs: [],
        constant: true,
      },
      { type: "fallback", stateMutability: "payable", payable: true },
      {
        type: "event",
        name: "TobinTaxStalenessThresholdSet",
        inputs: [{ type: "uint256", name: "value", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "DailySpendingRatioSet",
        inputs: [{ type: "uint256", name: "ratio", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "TokenAdded",
        inputs: [{ type: "address", name: "token", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "TokenRemoved",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "index", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "SpenderAdded",
        inputs: [{ type: "address", name: "spender", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "SpenderRemoved",
        inputs: [{ type: "address", name: "spender", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OtherReserveAddressAdded",
        inputs: [
          { type: "address", name: "otherReserveAddress", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "OtherReserveAddressRemoved",
        inputs: [
          { type: "address", name: "otherReserveAddress", indexed: true },
          { type: "uint256", name: "index", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "AssetAllocationSet",
        inputs: [
          { type: "bytes32[]", name: "symbols", indexed: false },
          { type: "uint256[]", name: "weights", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ReserveGoldTransferred",
        inputs: [
          { type: "address", name: "spender", indexed: true },
          { type: "address", name: "to", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["SortedOracles"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "address[]", name: "" },
          { type: "uint256[]", name: "" },
          { type: "uint8[]", name: "" },
        ],
        name: "getRates",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "medianTimestamp",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOracle",
        inputs: [
          { type: "address", name: "" },
          { type: "address", name: "" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "reportExpirySeconds",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeOracle",
        inputs: [
          { type: "address", name: "token" },
          { type: "address", name: "oracleAddress" },
          { type: "uint256", name: "index" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numTimestamps",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "report",
        inputs: [
          { type: "address", name: "token" },
          { type: "uint256", name: "value" },
          { type: "address", name: "lesserKey" },
          { type: "address", name: "greaterKey" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getOracles",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "oracles",
        inputs: [
          { type: "address", name: "" },
          { type: "uint256", name: "" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "address[]", name: "" },
          { type: "uint256[]", name: "" },
          { type: "uint8[]", name: "" },
        ],
        name: "getTimestamps",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numRates",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "removeExpiredReports",
        inputs: [
          { type: "address", name: "token" },
          { type: "uint256", name: "n" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setReportExpiry",
        inputs: [{ type: "uint256", name: "_reportExpirySeconds" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "medianRate",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "addOracle",
        inputs: [
          { type: "address", name: "token" },
          { type: "address", name: "oracleAddress" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [{ type: "uint256", name: "_reportExpirySeconds" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "bool", name: "" },
          { type: "address", name: "" },
        ],
        name: "isOldestReportExpired",
        inputs: [{ type: "address", name: "token" }],
        constant: true,
      },
      {
        type: "event",
        name: "OracleAdded",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "address", name: "oracleAddress", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "OracleRemoved",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "address", name: "oracleAddress", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "OracleReported",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "address", name: "oracle", indexed: true },
          { type: "uint256", name: "timestamp", indexed: false },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "OracleReportRemoved",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "address", name: "oracle", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "MedianUpdated",
        inputs: [
          { type: "address", name: "token", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ReportExpirySet",
        inputs: [{ type: "uint256", name: "reportExpiry", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["StableToken"] = [
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "name",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "approve",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromCurrentSet",
        inputs: [{ type: "uint256", name: "index" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "valueToUnits",
        inputs: [{ type: "uint256", name: "value" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "totalSupply",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setInflationParameters",
        inputs: [
          { type: "uint256", name: "rate" },
          { type: "uint256", name: "updatePeriod" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferFrom",
        inputs: [
          { type: "address", name: "from" },
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "checkProofOfPossession",
        inputs: [
          { type: "address", name: "sender" },
          { type: "bytes", name: "blsKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint8", name: "" }],
        name: "decimals",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "increaseAllowance",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumberOfBlock",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "mint",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "burn",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getVerifiedSealBitmapFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "debitGasFees",
        inputs: [
          { type: "address", name: "from" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromSet",
        inputs: [
          { type: "uint256", name: "index" },
          { type: "uint256", name: "blockNumber" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "hashHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "creditGasFees",
        inputs: [
          { type: "address", name: "from" },
          { type: "address", name: "feeRecipient" },
          { type: "address", name: "gatewayFeeRecipient" },
          { type: "address", name: "communityFund" },
          { type: "uint256", name: "refund" },
          { type: "uint256", name: "tipTxFee" },
          { type: "uint256", name: "gatewayFee" },
          { type: "uint256", name: "baseTxFee" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "balanceOf",
        inputs: [{ type: "address", name: "accountOwner" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSizeInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "string", name: "_name" },
          { type: "string", name: "_symbol" },
          { type: "uint8", name: "_decimals" },
          { type: "address", name: "registryAddress" },
          { type: "uint256", name: "inflationRate" },
          { type: "uint256", name: "inflationFactorUpdatePeriod" },
          { type: "address[]", name: "initialBalanceAddresses" },
          { type: "uint256[]", name: "initialBalanceValues" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBlockNumberFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "string", name: "" }],
        name: "symbol",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumber",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInSet",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "decreaseAllowance",
        inputs: [
          { type: "address", name: "spender" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getInflationParameters",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transfer",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "unitsToValue",
        inputs: [{ type: "uint256", name: "units" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "allowance",
        inputs: [
          { type: "address", name: "accountOwner" },
          { type: "address", name: "spender" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "transferWithComment",
        inputs: [
          { type: "address", name: "to" },
          { type: "uint256", name: "value" },
          { type: "string", name: "comment" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSize",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "fractionMulExp",
        inputs: [
          { type: "uint256", name: "aNumerator" },
          { type: "uint256", name: "aDenominator" },
          { type: "uint256", name: "bNumerator" },
          { type: "uint256", name: "bDenominator" },
          { type: "uint256", name: "exponent" },
          { type: "uint256", name: "_decimals" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getParentSealBitmap",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "event",
        name: "InflationFactorUpdated",
        inputs: [
          { type: "uint256", name: "factor", indexed: false },
          { type: "uint256", name: "lastUpdated", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "InflationParametersUpdated",
        inputs: [
          { type: "uint256", name: "rate", indexed: false },
          { type: "uint256", name: "updatePeriod", indexed: false },
          { type: "uint256", name: "lastUpdated", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "Transfer",
        inputs: [
          { type: "address", name: "from", indexed: true },
          { type: "address", name: "to", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "TransferComment",
        inputs: [{ type: "string", name: "comment", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "Approval",
        inputs: [
          { type: "address", name: "owner", indexed: true },
          { type: "address", name: "spender", indexed: true },
          { type: "uint256", name: "value", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];

    contractABI["Validators"] = [
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "removeMember",
        inputs: [{ type: "address", name: "validator" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getMembershipInLastEpoch",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromCurrentSet",
        inputs: [{ type: "uint256", name: "index" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "initialized",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "bytes", name: "ecdsaPublicKey" },
          { type: "bytes", name: "blsPublicKey" },
          { type: "address", name: "affiliation" },
          { type: "uint256", name: "score" },
          { type: "address", name: "signer" },
        ],
        name: "getValidator",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getValidatorScoreParameters",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "checkProofOfPossession",
        inputs: [
          { type: "address", name: "sender" },
          { type: "bytes", name: "blsKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "addFirstMember",
        inputs: [
          { type: "address", name: "validator" },
          { type: "address", name: "lesser" },
          { type: "address", name: "greater" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256[]", name: "" },
          { type: "address[]", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getMembershipHistory",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "slashingMultiplierResetPeriod",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getGroupNumMembers",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumberOfBlock",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getRegisteredValidatorGroups",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getMaxGroupSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getVerifiedSealBitmapFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "membershipHistoryLength",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "updateEcdsaPublicKey",
        inputs: [
          { type: "address", name: "account" },
          { type: "address", name: "signer" },
          { type: "bytes", name: "ecdsaPublicKey" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getNumRegisteredValidators",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "getMembershipInLastEpochFromSigner",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isValidatorGroup",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "maxGroupSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "setGroupLockedGoldRequirements",
        inputs: [
          { type: "uint256", name: "value" },
          { type: "uint256", name: "duration" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "validatorSignerAddressFromSet",
        inputs: [
          { type: "uint256", name: "index" },
          { type: "uint256", name: "blockNumber" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "deregisterValidatorGroup",
        inputs: [{ type: "uint256", name: "index" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "hashHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setSlashingMultiplierResetPeriod",
        inputs: [{ type: "uint256", name: "value" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setCommissionUpdateDelay",
        inputs: [{ type: "uint256", name: "delay" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getGroupLockedGoldRequirements",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256[]", name: "" }],
        name: "getGroupsNumMembers",
        inputs: [{ type: "address[]", name: "accounts" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "updatePublicKeys",
        inputs: [
          { type: "address", name: "account" },
          { type: "address", name: "signer" },
          { type: "bytes", name: "ecdsaPublicKey" },
          { type: "bytes", name: "blsPublicKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "renounceOwnership",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSizeInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "setValidatorLockedGoldRequirements",
        inputs: [
          { type: "uint256", name: "value" },
          { type: "uint256", name: "duration" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "calculateGroupEpochScore",
        inputs: [{ type: "uint256[]", name: "uptimes" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "initialize",
        inputs: [
          { type: "address", name: "registryAddress" },
          { type: "uint256", name: "groupRequirementValue" },
          { type: "uint256", name: "groupRequirementDuration" },
          { type: "uint256", name: "validatorRequirementValue" },
          { type: "uint256", name: "validatorRequirementDuration" },
          { type: "uint256", name: "validatorScoreExponent" },
          { type: "uint256", name: "validatorScoreAdjustmentSpeed" },
          { type: "uint256", name: "_membershipHistoryLength" },
          { type: "uint256", name: "_slashingMultiplierResetPeriod" },
          { type: "uint256", name: "_maxGroupSize" },
          { type: "uint256", name: "_commissionUpdateDelay" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "registry",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setNextCommissionUpdate",
        inputs: [{ type: "uint256", name: "commission" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInCurrentSet",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getBlockNumberFromHeader",
        inputs: [{ type: "bytes", name: "header" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "deregisterValidator",
        inputs: [{ type: "uint256", name: "index" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "owner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getTopGroupValidators",
        inputs: [
          { type: "address", name: "account" },
          { type: "uint256", name: "n" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isOwner",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "calculateEpochScore",
        inputs: [{ type: "uint256", name: "uptime" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "reorderMember",
        inputs: [
          { type: "address", name: "validator" },
          { type: "address", name: "lesserMember" },
          { type: "address", name: "greaterMember" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochNumber",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "numberValidatorsInSet",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "address[]", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256[]", name: "" },
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getValidatorGroup",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "setRegistry",
        inputs: [{ type: "address", name: "registryAddress" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "affiliate",
        inputs: [{ type: "address", name: "group" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes", name: "blsPublicKey" }],
        name: "getValidatorBlsPublicKeyFromSigner",
        inputs: [{ type: "address", name: "signer" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "resetSlashingMultiplier",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getCommissionUpdateDelay",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "value" },
          { type: "uint256", name: "duration" },
        ],
        name: "validatorLockedGoldRequirements",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "updateBlsPublicKey",
        inputs: [
          { type: "bytes", name: "blsPublicKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "updateValidatorScoreFromSigner",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint256", name: "uptime" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "getValidatorLockedGoldRequirements",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "halveSlashingMultiplier",
        inputs: [{ type: "address", name: "account" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "meetsAccountLockedGoldRequirements",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "value" },
          { type: "uint256", name: "duration" },
        ],
        name: "groupLockedGoldRequirements",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "addMember",
        inputs: [{ type: "address", name: "validator" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "setValidatorScoreParameters",
        inputs: [
          { type: "uint256", name: "exponent" },
          { type: "uint256", name: "adjustmentSpeed" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getRegisteredValidatorSigners",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "distributeEpochPaymentsFromSigner",
        inputs: [
          { type: "address", name: "signer" },
          { type: "uint256", name: "maxPayment" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address[]", name: "" }],
        name: "getRegisteredValidators",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getValidatorGroupSlashingMultiplier",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getAccountLockedGoldRequirement",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "getEpochSize",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "commissionUpdateDelay",
        inputs: [],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "setMaxGroupSize",
        inputs: [{ type: "uint256", name: "size" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "forceDeaffiliateIfValidator",
        inputs: [{ type: "address", name: "validatorAccount" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "uint256", name: "" }],
        name: "minQuorumSize",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "updateCommission",
        inputs: [],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "registerValidator",
        inputs: [
          { type: "bytes", name: "ecdsaPublicKey" },
          { type: "bytes", name: "blsPublicKey" },
          { type: "bytes", name: "blsPop" },
        ],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "address", name: "" }],
        name: "groupMembershipInEpoch",
        inputs: [
          { type: "address", name: "account" },
          { type: "uint256", name: "epochNumber" },
          { type: "uint256", name: "index" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [
          { type: "uint256", name: "" },
          { type: "uint256", name: "" },
        ],
        name: "fractionMulExp",
        inputs: [
          { type: "uint256", name: "aNumerator" },
          { type: "uint256", name: "aDenominator" },
          { type: "uint256", name: "bNumerator" },
          { type: "uint256", name: "bDenominator" },
          { type: "uint256", name: "exponent" },
          { type: "uint256", name: "_decimals" },
        ],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "registerValidatorGroup",
        inputs: [{ type: "uint256", name: "commission" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "setMembershipHistoryLength",
        inputs: [{ type: "uint256", name: "length" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [],
        name: "transferOwnership",
        inputs: [{ type: "address", name: "newOwner" }],
        constant: false,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "isValidator",
        inputs: [{ type: "address", name: "account" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "view",
        payable: false,
        outputs: [{ type: "bytes32", name: "" }],
        name: "getParentSealBitmap",
        inputs: [{ type: "uint256", name: "blockNumber" }],
        constant: true,
      },
      {
        type: "function",
        stateMutability: "nonpayable",
        payable: false,
        outputs: [{ type: "bool", name: "" }],
        name: "deaffiliate",
        inputs: [],
        constant: false,
      },
      {
        type: "event",
        name: "MaxGroupSizeSet",
        inputs: [{ type: "uint256", name: "size", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "CommissionUpdateDelaySet",
        inputs: [{ type: "uint256", name: "delay", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorScoreParametersSet",
        inputs: [
          { type: "uint256", name: "exponent", indexed: false },
          { type: "uint256", name: "adjustmentSpeed", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "GroupLockedGoldRequirementsSet",
        inputs: [
          { type: "uint256", name: "value", indexed: false },
          { type: "uint256", name: "duration", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorLockedGoldRequirementsSet",
        inputs: [
          { type: "uint256", name: "value", indexed: false },
          { type: "uint256", name: "duration", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "MembershipHistoryLengthSet",
        inputs: [{ type: "uint256", name: "length", indexed: false }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorRegistered",
        inputs: [{ type: "address", name: "validator", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorDeregistered",
        inputs: [{ type: "address", name: "validator", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorAffiliated",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "address", name: "group", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorDeaffiliated",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "address", name: "group", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorEcdsaPublicKeyUpdated",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "bytes", name: "ecdsaPublicKey", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorBlsPublicKeyUpdated",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "bytes", name: "blsPublicKey", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorScoreUpdated",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "uint256", name: "score", indexed: false },
          { type: "uint256", name: "epochScore", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupRegistered",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "uint256", name: "commission", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupDeregistered",
        inputs: [{ type: "address", name: "group", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupMemberAdded",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "address", name: "validator", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupMemberRemoved",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "address", name: "validator", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupMemberReordered",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "address", name: "validator", indexed: true },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupCommissionUpdateQueued",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "uint256", name: "commission", indexed: false },
          { type: "uint256", name: "activationBlock", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorGroupCommissionUpdated",
        inputs: [
          { type: "address", name: "group", indexed: true },
          { type: "uint256", name: "commission", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "ValidatorEpochPaymentDistributed",
        inputs: [
          { type: "address", name: "validator", indexed: true },
          { type: "uint256", name: "validatorPayment", indexed: false },
          { type: "address", name: "group", indexed: true },
          { type: "uint256", name: "groupPayment", indexed: false },
        ],
        anonymous: false,
      },
      {
        type: "event",
        name: "RegistrySet",
        inputs: [{ type: "address", name: "registryAddress", indexed: true }],
        anonymous: false,
      },
      {
        type: "event",
        name: "OwnershipTransferred",
        inputs: [
          { type: "address", name: "previousOwner", indexed: true },
          { type: "address", name: "newOwner", indexed: true },
        ],
        anonymous: false,
      },
    ];



    Object.keys(contractABI).forEach(function (item) {
      try {
        Contracts.upsert(
          { name: item },
          {
            $set: {
              ABI: contractABI[item],
            },
          }
        );
      } catch (e) {
        console.log(e);
      }
    });

    return contractABI;

    abiDecoder.addABI(contractABI["validatorsABI"]);

  },
});
